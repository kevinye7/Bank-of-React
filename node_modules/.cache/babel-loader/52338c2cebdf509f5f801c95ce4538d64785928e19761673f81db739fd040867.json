{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\bank-of-react\\\\Bank-of-React\\\\src\\\\components\\\\Login.js\";\n/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LogIn extends Component {\n  constructor(props) {\n    // Create and initialize state\n    super(props);\n    // When User Name input is changed, capture the new input value and update state\n    this.handleChange = e => {\n      const updatedUser = {\n        ...this.state.user\n      }; // Create an object for state\n      updatedUser.userName = e.target.value; // Set object's userName to the new input value\n      this.setState({\n        user: updatedUser\n      }); // Update state with object values\n    };\n    // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.mockLogIn(this.state.user); // Update state in the top-level component (App.js)\n      this.setState({\n        redirect: true\n      }); // Update state to trigger Redirect\n    };\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,\n        // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false // Redirect property used to trigger Redirect\n    };\n  }\n  render() {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/userProfile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"userName\",\n            defaultValue: this.props.user.userName,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LogIn;","map":{"version":3,"names":["React","Component","Redirect","Link","jsxDEV","_jsxDEV","LogIn","constructor","props","handleChange","e","updatedUser","state","user","userName","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","name","defaultValue","onChange"],"sources":["C:/Users/Kevin/bank-of-react/Bank-of-React/src/components/Login.js"],"sourcesContent":["/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,SAASL,SAAS,CAAC;EAC5BM,WAAWA,CAAEC,KAAK,EAAE;IAAG;IACrB,KAAK,CAACA,KAAK,CAAC;IAWd;IAAA,KACAC,YAAY,GAAIC,CAAC,IAAK;MACpB,MAAMC,WAAW,GAAG;QAAC,GAAG,IAAI,CAACC,KAAK,CAACC;MAAI,CAAC,CAAC,CAAE;MAC3CF,WAAW,CAACG,QAAQ,GAAGJ,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,CAAE;MACxC,IAAI,CAACC,QAAQ,CAAC;QAACJ,IAAI,EAAEF;MAAW,CAAC,CAAC,EAAE;IACtC,CAAC;IAED;IAAA,KACAO,YAAY,GAAIR,CAAC,IAAK;MACpBA,CAAC,CAACS,cAAc,CAAC,CAAC;MAClB,IAAI,CAACX,KAAK,CAACY,SAAS,CAAC,IAAI,CAACR,KAAK,CAACC,IAAI,CAAC,EAAE;MACvC,IAAI,CAACI,QAAQ,CAAC;QAACI,QAAQ,EAAE;MAAI,CAAC,CAAC,EAAE;IACnC,CAAC;IAtBC,IAAI,CAACT,KAAK,GAAG;MACXC,IAAI,EAAE;QACJ;QACAC,QAAQ,EAAE,IAAI,CAACN,KAAK,CAACK,IAAI,CAACC,QAAQ;QAAG;QACrCQ,QAAQ,EAAE;MACZ,CAAC;MACDD,QAAQ,EAAE,KAAK,CAAE;IACnB,CAAC;EACH;EAgBAE,MAAMA,CAAA,EAAI;IACR;IACA,IAAI,IAAI,CAACX,KAAK,CAACS,QAAQ,EAAE;MACvB,oBAAQhB,OAAA,CAACH,QAAQ;QAACsB,EAAE,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IACvC;;IAEA;IACA,oBACEvB,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAI;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEdvB,OAAA;QAAMyB,QAAQ,EAAE,IAAI,CAACZ,YAAa;QAAAW,QAAA,gBAChCxB,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAO;UAAS;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBvB,OAAA;YAAO0B,IAAI,EAAC,MAAM;YAACC,IAAI,EAAC,UAAU;YAACC,YAAY,EAAE,IAAI,CAACzB,KAAK,CAACK,IAAI,CAACC,QAAS;YAACoB,QAAQ,EAAE,IAAI,CAACzB;UAAa;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvG,CAAC,eACNvB,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAO;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvBvB,OAAA;YAAO0B,IAAI,EAAC,UAAU;YAACC,IAAI,EAAC;UAAU;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACNvB,OAAA;UAAAwB,QAAA,EAAQ;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACPvB,OAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLvB,OAAA,CAACF,IAAI;QAACqB,EAAE,EAAC,GAAG;QAAAK,QAAA,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;AACF;AAEA,eAAetB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}